{"version":3,"sources":["../../../api/controllers/requestsController.js"],"names":["global","data","id","name","email","date","dept","message","Url","exports","getAllUserRequests","req","res","userId","userInfo","sql","text","values","db","query","err","result","status","json","end","user","rows","getSingleRequest","parseInt","params","requestId","i","length","createRequest","body","push","modifyRequest","deleteRequest","splice"],"mappings":"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","file":"requestsController.js","sourcesContent":["import db from '../models/userModel';\r\n\r\nglobal.data = [\r\n  {\r\n    id: 110,\r\n    name: 'John doe',\r\n    email: 'example@gmail.com',\r\n    date: '2018-10-13',\r\n    dept: 'Accounts',\r\n    message: 'Lorem ipsum ',\r\n    Url: 'http://localhost:5000/api/v1/users/requests/110',\r\n  },\r\n\r\n  {\r\n    id: 120,\r\n    name: 'Jane doe',\r\n    email: 'janedoe@gmail.com',\r\n    date: '2014-1-25',\r\n    dept: 'Engineering',\r\n    message: 'Lorem ipsum Lorem ipsum Lorem',\r\n    Url: 'http://localhost:5000/api/v1/users/requests/120',\r\n  },\r\n  {\r\n    id: 130,\r\n    name: 'Frank Moore',\r\n    email: 'frankmoore@examplemail.me',\r\n    date: '2011-8-1',\r\n    dept: 'Logistics',\r\n    message: 'Lorem ipsum Lorem ipsum Lorem ipsum ',\r\n    Url: 'http://localhost:5000/api/v1/users/requests/130',\r\n  },\r\n];\r\n\r\n\r\nexports.getAllUserRequests = (req, res) => {\r\n  const userId = req.userInfo.id;\r\n  const sql = {\r\n    text: 'SELECT * FROM requests WHERE user_id=$1',\r\n    values: [userId],\r\n  };\r\n  db.query(sql, (err, result) => {\r\n    if (err) {\r\n      return res.status(500)\r\n        .json({\r\n          err,\r\n        }).end();\r\n    }\r\n    res.status(200)\r\n      .json({\r\n        user: req.userInfo,\r\n        result: result.rows,\r\n      });\r\n  });\r\n\r\n  // if (global.data.length !== 0) {\r\n  //   return res.status(200)\r\n  //     .json({\r\n  //       status: 'Success',\r\n  //       data: global.data,\r\n  //     });\r\n  // }\r\n  // res.status(204)\r\n  //   .end();\r\n};\r\n\r\n\r\nexports.getSingleRequest = (req, res) => {\r\n  const id = parseInt(req.params.requestId, 10);\r\n  // const sql = {\r\n  //   text: 'SELECT * FROM requests WHERE id=$1',\r\n  //   values: [id],\r\n  // };\r\n  // db.query(sql, (err, result) => {\r\n  //   if (err) {\r\n  //     return res.status(500)\r\n  //       .json({\r\n  //         error: err,\r\n  //       })\r\n  //       .end();\r\n  //   }\r\n  //   if (result.rows.length > 0) {\r\n  //     return res.status(200)\r\n  //       .json({\r\n  //         result: result.rows,\r\n  //       });\r\n  //   }\r\n  //   res.status(404)\r\n  //     .json({\r\n  //       message: 'Record not found',\r\n  //     });\r\n  // });\r\n\r\n  for (let i = 0; i < global.data.length; i += 1) {\r\n    if (global.data[i].id === id) {\r\n      return res.status(200)\r\n        .json({\r\n          status: 'Success',\r\n          data: global.data[i],\r\n        });\r\n    }\r\n  }\r\n  res.status(404)\r\n    .json({\r\n      status: 'fail',\r\n      message: 'Not found',\r\n    });\r\n};\r\n\r\nexports.createRequest = (req, res) => {\r\n//   const userId = 2;\r\n//   req.body.url = `/api/v1/users/requests/`;\r\n//   const query = {\r\n//     text: 'INSERT INTO requests(user_id, requester_name, requester_email, date, status, request, dept, url, method) VALUES($1, $2, $3, NOW() ,$4, $5, $6, $7, $8)',\r\n//     values: [userId, req.body.name, req.body.email, 'pending', req.body.request, req.body.dept, req.body.url, 'GET'],\r\n//   };\r\n//   db.query(query, (err, result) => {\r\n//     if (err) {\r\n//       return res.status(500)\r\n//         .json({\r\n//           message: `Server Error ${err}`,\r\n//         });\r\n//     }\r\n//     res.status(201)\r\n//       .json({\r\n//         message: 'Request Created successfully',\r\n//       });\r\n//     if (req.body.name && req.body.email === null) {\r\n//       res.status(400)\r\n//         .json({\r\n//           message: 'Bad Request',\r\n//         });\r\n//     }\r\n//   });\r\n// };\r\n\r\n  if (typeof req.body.id === 'number') {\r\n    req.body.Url = `/api/v1/users/requests/${req.body.id}`;\r\n    global.data.push(req.body);\r\n    return res.status(201)\r\n      .json({\r\n        status: 'Success',\r\n        message: 'Request Created successfully',\r\n      });\r\n  }\r\n  res.status(400)\r\n    .json({\r\n      status: 'Fail',\r\n      message: 'Bad Request',\r\n    });\r\n};\r\n\r\nexports.modifyRequest = (req, res) => {\r\n  const id = parseInt(req.params.requestId, 10);\r\n  // const query = {\r\n  //   text: 'INSERT INTO requests(user_id, requester_name, requester_email, date, status, request, dept, url, method) VALUES($1, $2, $3, NOW() ,$4, $5, $6, $7, $8)',\r\n  //   values: [userId, req.body.name, req.body.email, 'pending', req.body.request, req.body.dept, req.body.url, 'GET'],\r\n  // };\r\n\r\n\r\n  for (let i = 0; i < global.data.length; i += 1) {\r\n    if (global.data[i].id === id) {\r\n      global.data[i].name = req.body.name;\r\n      global.data[i].email = req.body.email;\r\n      global.data[i].date = req.body.date;\r\n      global.data[i].dept = req.body.dept;\r\n      global.data[i].message = req.body.message;\r\n      return res.status(200)\r\n        .json({\r\n          status: 'Success',\r\n          data: global.data[i],\r\n        });\r\n    }\r\n  }\r\n  res.status(404)\r\n    .json({\r\n      status: 'fail',\r\n      message: 'Not found',\r\n    });\r\n};\r\nexports.deleteRequest = (req, res) => {\r\n  const id = parseInt(req.params.requestId, 10);\r\n  for (let i = 0; i < global.data.length; i += 1) {\r\n    if (global.data[i].id === id) {\r\n      global.data.splice(i, 1);\r\n      return res.status(200)\r\n        .json({\r\n          status: 'Success',\r\n          message: 'Request deleted successfully',\r\n        });\r\n    }\r\n  }\r\n  res.status(404)\r\n    .json({\r\n      status: 'Fail',\r\n      message: 'Not found',\r\n    });\r\n};\r\n"]}