{"version":3,"sources":["../../../api/controllers/requestsController.js"],"names":["exports","getAllUserRequests","req","res","userId","userInfo","id","sql","text","values","db","query","err","result","status","json","user","rows","getSingleRequest","parseInt","params","requestId","error","end","length","message","createRequest","body","name","dept","request","Joi","validate","department","requestValidation","value","email","details","modifyRequest","response","rowCount","deleteRequest"],"mappings":"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","file":"requestsController.js","sourcesContent":["import Joi from 'joi';\r\n\r\nimport db from '../models/userModel';\r\n\r\nimport { requestValidation } from '../includes/validations';\r\n\r\nexports.getAllUserRequests = (req, res) => {\r\n  const userId = req.userInfo.id;\r\n  const sql = {\r\n    text: 'SELECT * FROM requests WHERE user_id=$1 ORDER BY id ASC',\r\n    values: [userId],\r\n  };\r\n  db.query(sql, (err, result) => {\r\n    res.status(200)\r\n      .json({\r\n        user: req.userInfo,\r\n        result: result.rows,\r\n      });\r\n  });\r\n};\r\n\r\nexports.getSingleRequest = (req, res) => {\r\n  const userId = req.userInfo.id;\r\n  const id = parseInt(req.params.requestId, 10);\r\n  const sql = {\r\n    text: 'SELECT * FROM requests WHERE id=$1 AND user_id=$2 ORDER BY id ASC',\r\n    values: [id, userId],\r\n  };\r\n  db.query(sql, (err, result) => {\r\n    if (err) {\r\n      return res.status(500)\r\n        .json({\r\n          error: err,\r\n        })\r\n        .end();\r\n    }\r\n    if (result.rows.length > 0) {\r\n      return res.status(200)\r\n        .json({\r\n          result: result.rows,\r\n        });\r\n    }\r\n    res.status(404)\r\n      .json({\r\n        message: 'Request not found',\r\n      });\r\n  });\r\n};\r\n\r\nexports.createRequest = (req, res) => {\r\n  const { name, dept, request } = req.body;\r\n  Joi.validate({\r\n    name,\r\n    department: dept,\r\n    request,\r\n  }, requestValidation, (err, value) => {\r\n    if (err === null) {\r\n      const userId = req.userInfo.id;\r\n      const query = {\r\n        text: 'INSERT INTO requests(user_id, requester_name, requester_email, date, status, request, dept) VALUES($1, $2, $3, NOW() ,$4, $5, $6)',\r\n        values: [userId, value.name, req.userInfo.email, 'pending', value.request, value.department],\r\n      };\r\n      db.query(query, (err, result) => {\r\n        if (err) {\r\n          return res.status(500)\r\n            .json({\r\n              err,\r\n            });\r\n        }\r\n        res.status(201)\r\n          .json({\r\n            message: 'Request Created successfully',\r\n          });\r\n      });\r\n    } else {\r\n      res.status(400)\r\n        .json({\r\n          error: err.details[0].message,\r\n        });\r\n    }\r\n  });\r\n};\r\n\r\nexports.modifyRequest = (req, res) => {\r\n  const id = parseInt(req.params.requestId, 10);\r\n  db.query('SELECT status FROM requests WHERE id=$1', [id], (err, response) => {\r\n    if (err) {\r\n      return res.status(500)\r\n        .json({ err });\r\n    }\r\n    if (response.rows.length !== 0 && (response.rows[0].status === 'approved' || response.rows[0].status === 'resolved')) {\r\n      return res.status(409)\r\n        .json({\r\n          error: 'Cannot edit!, Request has already been approved',\r\n        });\r\n    }\r\n    const { name, dept, request } = req.body;\r\n    Joi.validate({\r\n      name,\r\n      department: dept,\r\n      request,\r\n    }, requestValidation, (err, value) => {\r\n      if (err === null) {\r\n        const query = {\r\n          text: 'UPDATE requests SET requester_name=$1, date=NOW(), request=$2, dept=$3 WHERE id=$4 RETURNING *',\r\n          values: [value.name, value.request, value.department, id],\r\n        };\r\n        db.query(query, (err, result) => {\r\n          if (err) {\r\n            return res.status(500)\r\n              .json({ err });\r\n          }\r\n          if (result.rowCount === 1 && result.rows.length > 0) {\r\n            return res.status(200)\r\n              .json({ result: result.rows });\r\n          }\r\n          res.status(404)\r\n            .json({\r\n              message: 'Request Not found',\r\n            });\r\n        });\r\n      } else {\r\n        res.status(400)\r\n          .json({\r\n            error: err.details[0].message,\r\n          });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexports.deleteRequest = (req, res) => {\r\n  const id = parseInt(req.params.requestId, 10);\r\n  db.query('SELECT status FROM requests WHERE id=$1', [id], (err, response) => {\r\n    if (err) {\r\n      return res.status(500)\r\n        .json({\r\n          err,\r\n        });\r\n    }\r\n    if (response.rows.length !== 0 && (response.rows[0].status === 'approved' || response.rows[0].status === 'resolved')) {\r\n      return res.status(409)\r\n        .json({\r\n          error: 'Cannot Delete!, Request has already been approved',\r\n        });\r\n    }\r\n    db.query('DELETE FROM requests WHERE id=$1', [id], (err, result) => {\r\n      if (err) {\r\n        return res.status(500)\r\n          .json({\r\n            err,\r\n          });\r\n      }\r\n      if (result.rowCount === 0) {\r\n        return res.status(404)\r\n          .json({\r\n            message: 'Request Not found',\r\n          });\r\n      }\r\n      res.status(200)\r\n        .json({\r\n          message: 'Request deleted successfully',\r\n        });\r\n    });\r\n  });\r\n};\r\n"]}