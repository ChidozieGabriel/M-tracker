{"version":3,"sources":["../../../api/tests/requestRoutes.test.js"],"names":["server","superTest","agent","app","Expect","chai","expect","data","id","name","email","date","dept","message","describe","it","done","get","end","err","res","statusCode","to","equal","be","an"],"mappings":";;AAAA;;;;AAEA;;;;AAEA;;;;;;AAGA,IAAMA,SAASC,oBAAUC,KAAV,CAAgBC,aAAhB,CAAf;;AAEA,IAAMC,SAASC,eAAKC,MAApB;;AAEA,IAAMC,OAAO,CACX;AACEC,MAAI,GADN;AAEEC,QAAM,UAFR;AAGEC,SAAO,mBAHT;AAIEC,QAAM,YAJR;AAKEC,QAAM,UALR;AAMEC,WAAS;AANX,CADW,EAUX;AACEL,MAAI,GADN;AAEEC,QAAM,UAFR;AAGEC,SAAO,mBAHT;AAIEC,QAAM,WAJR;AAKEC,QAAM,aALR;AAMEC,WAAS;AANX,CAVW,EAoBX;AACEL,MAAI,GADN;AAEEC,QAAM,aAFR;AAGEC,SAAO,2BAHT;AAIEC,QAAM,UAJR;AAKEC,QAAM,WALR;AAMEC,WAAS;AANX,CApBW,CAAb;;AA8BAC,SAAS,cAAT,EAAyB,YAAM;AAC7BA,WAAS,yBAAT,EAAoC,YAAM;AACxCC,OAAG,uDAAH,EAA4D,UAACC,IAAD,EAAU;AACpEhB,aACGiB,GADH,CACO,wBADP,EAEGC,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBhB,eAAOgB,IAAIC,UAAX,EACGC,EADH,CAEGC,KAFH,CAES,GAFT;AAGAnB,eAAOgB,GAAP,EACGE,EADH,CAEGE,EAFH,CAGGC,EAHH,CAGM,QAHN;AAID,OAVH;AAWA,aAAOT,MAAP;AACD,KAbD;AAcD,GAfD;AAgBD,CAjBD","file":"requestRoutes.test.js","sourcesContent":["import chai from 'chai';\r\n\r\nimport superTest from 'supertest';\r\n\r\nimport app from '../../app';\r\n\r\n\r\nconst server = superTest.agent(app);\r\n\r\nconst Expect = chai.expect;\r\n\r\nconst data = [\r\n  {\r\n    id: 110,\r\n    name: 'John doe',\r\n    email: 'example@gmail.com',\r\n    date: '2018-10-13',\r\n    dept: 'Accounts',\r\n    message: 'Lorem ipsum ',\r\n  },\r\n\r\n  {\r\n    id: 120,\r\n    name: 'Jane doe',\r\n    email: 'janedoe@gmail.com',\r\n    date: '2014-1-25',\r\n    dept: 'Engineering',\r\n    message: 'Lorem ipsum Lorem ipsum Lorem',\r\n  },\r\n\r\n\r\n  {\r\n    id: 130,\r\n    name: 'Frank Moore',\r\n    email: 'frankmoore@examplemail.me',\r\n    date: '2011-8-1',\r\n    dept: 'Logistics',\r\n    message: 'Lorem ipsum Lorem ipsum Lorem ipsum ',\r\n  },\r\n];\r\n\r\ndescribe('API ENDPOINT', () => {\r\n  describe('GET request( /request )', () => {\r\n    it('Should get response as JSON and and array of objects ', (done) => {\r\n      server\r\n        .get('/api/v1/users/requests')\r\n        .end((err, res) => {\r\n          Expect(res.statusCode)\r\n            .to\r\n            .equal(200);\r\n          Expect(res)\r\n            .to\r\n            .be\r\n            .an('object');\r\n        });\r\n      return done();\r\n    });\r\n  });\r\n});\r\n"]}