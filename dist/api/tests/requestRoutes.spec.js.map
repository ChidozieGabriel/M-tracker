{"version":3,"sources":["../../../api/tests/requestRoutes.spec.js"],"names":["server","superTest","agent","app","Expect","chai","expect","describe","it","done","get","end","err","res","statusCode","to","equal","be","an","body","data","data1","id","name","email","date","dept","request","post","send","put"],"mappings":"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","file":"requestRoutes.spec.js","sourcesContent":["import chai from 'chai';\r\n\r\nimport superTest from 'supertest';\r\n\r\nimport app from '../../app';\r\n\r\n\r\nconst server = superTest.agent(app);\r\n\r\nconst Expect = chai.expect;\r\n\r\ndescribe('REQUEST CONTROLLER API ENDPOINT', () => {\r\n  it('Should list ALL requests on /user/request GET', (done) => {\r\n    server\r\n      .get('/api/v1/users/requests')\r\n      .end((err, res) => {\r\n        // Expect(err).to.be.null;\r\n        Expect(res.statusCode).to.equal(200);\r\n        Expect(res).to.be.an('object');\r\n        Expect(res.body.data).to.be.an('array');\r\n      });\r\n    return done();\r\n  });\r\n\r\n  it('Should list ONE requests on /user/request/:requestId GET', (done) => {\r\n    server\r\n      .get('/api/v1/users/requests/110')\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(200);\r\n        Expect(res).to.be.an('object');\r\n      });\r\n    return done();\r\n  });\r\n\r\n  it('Should throw a 404 error when request is not found', (done) => {\r\n    server\r\n      .get('/api/v1/users/requests/1100')\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(404);\r\n      });\r\n    return done();\r\n  });\r\n\r\n  const data1 = {\r\n    id: 140,\r\n    name: 'Janet May',\r\n    email: 'janetMaye@yahoomail.com',\r\n    date: '2011-11-21',\r\n    dept: 'Engineering HQ',\r\n    request: 'Lorem ipsum owjjfndfnmnxnfj Lorem ipsum Lorem',\r\n  };\r\n\r\n  it('should create a SINGLE request user/requests/ POST', (done) => {\r\n\r\n    server\r\n      .post('/api/v1/users/requests')\r\n      .send(data1)\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(201);\r\n      });\r\n    return done();\r\n  });\r\n\r\n  it('should get an error when a bad request is sent on user/requests/  POST', (done) => {\r\n    const data = {\r\n      id: '150',\r\n      name: 'Janet May',\r\n      email: 'janetMaye@yahoomail.com',\r\n      date: '2011-11-21',\r\n      dept: 'Engineering HQ',\r\n      request: 'Lorem ipsum',\r\n    };\r\n\r\n    server\r\n      .post('/api/v1/users/requests/')\r\n      .send(data)\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(400);\r\n      });\r\n    return done();\r\n  });\r\n\r\n\r\n\r\n  it('should update a SINGLE request on user/requests/:requestId PUT', (done) => {\r\n    const data = {\r\n      name: 'Janet May',\r\n      email: 'janetMaye@yahoomail.com',\r\n      date: '2011-11-21',\r\n      dept: 'Engineering HQ',\r\n      request: 'Lorem ipsum owjjfndfnmnxnfj Lorem ipsum Lorem',\r\n    };\r\n    server\r\n      .put('/api/v1/users/requests/110')\r\n      .send(data)\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(200);\r\n        Expect(res).to.be.an('object');\r\n        Expect(res.body.data).to.be.an('object');\r\n      });\r\n    return done();\r\n  });\r\n\r\n  it('should get an error when a request is not found on user/requests/:requestId  PUT', (done) => {\r\n    server\r\n      .put('/api/v1/users/requests/1100')\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(404);\r\n      });\r\n    return done();\r\n  });\r\n\r\n  it('should delete requests on user/requests/:requestId  DELETE', (done) => {\r\n    server\r\n      .put('/api/v1/users/requests/110')\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(200);\r\n      });\r\n    return done();\r\n  });\r\n\r\n  it('should get an error when a request is not found on user/requests/:requestId  DELETE', (done) => {\r\n    server\r\n      .put('/api/v1/users/requests/1100')\r\n      .end((err, res) => {\r\n        Expect(res.statusCode).to.equal(404);\r\n      });\r\n    return done();\r\n  });\r\n});\r\n"]}