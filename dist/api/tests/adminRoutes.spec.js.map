{"version":3,"sources":["../../../api/tests/adminRoutes.spec.js"],"names":["Expect","chai","expect","use","chaiHttp","global","tok","before","done","request","app","post","send","email","password","end","err","res","body","token","describe","it","put","set","Authorization","statusCode","to","equal","get","be","an"],"mappings":"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","file":"adminRoutes.spec.js","sourcesContent":["import chai from 'chai';\r\n\r\nimport chaiHttp from 'chai-http';\r\n\r\nimport app from '../../server';\r\n\r\nconst Expect = chai.expect;\r\n\r\nchai.use(chaiHttp);\r\n\r\n\r\nglobal.tok = null;\r\nbefore((done) => {\r\n  chai.request(app)\r\n    .post('/api/v1/auth/login')\r\n    .send({\r\n      email: 'admin@admin.com',\r\n      password: '123456',\r\n    })\r\n    .end((err, res) => {\r\n      global.tok = res.body.token;\r\n      done();\r\n    });\r\n});\r\n\r\ndescribe('ADMIN ROUTES', () => {\r\n\r\n  it('Should approve a request', (done) => {\r\n    chai.request(app)\r\n      .put('/api/v1/requests/1/approve')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should Disapprove a request', (done) => {\r\n    chai.request(app)\r\n      .put('/api/v1/requests/1/disapprove')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should Resolve a request', (done) => {\r\n    chai.request(app)\r\n      .put('/api/v1/requests/1/resolve')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should list ALL requests ordered by date', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/requests/')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n        Expect(res)\r\n          .to\r\n          .be\r\n          .an('object');\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should list ALL requests ordered by resolved', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/requests/resolved')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n        Expect(res)\r\n          .to\r\n          .be\r\n          .an('object');\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should list ALL requests ordered by approved', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/requests/approved')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n        Expect(res)\r\n          .to\r\n          .be\r\n          .an('object');\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should list ALL requests ordered by disapproved', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/requests/disapproved')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n        Expect(res)\r\n          .to\r\n          .be\r\n          .an('object');\r\n      });\r\n    done();\r\n  });\r\n\r\n  it('Should list ALL requests ordered by pending', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/requests/pending')\r\n      .set({ Authorization: 'Bearer ' + global.tok })\r\n      .end((err, res) => {\r\n        Expect(res.statusCode)\r\n          .to\r\n          .equal(200);\r\n        Expect(res)\r\n          .to\r\n          .be\r\n          .an('object');\r\n      });\r\n    done();\r\n  });\r\n});\r\n"]}