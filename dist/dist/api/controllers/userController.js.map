{"version":3,"sources":["../../../api/controllers/userController.js"],"names":["_bcrypt","require","_bcrypt2","_interopRequireDefault","_jsonwebtoken","_jsonwebtoken2","_userModel","_userModel2","obj","__esModule","default","exports","signUp","req","res","_req$body","body","name","email","password","sql","text","values","query","err","result","status","json","rows","length","message","hash","rowCount","token","sign","id","process","env","JWT_KEY","expiresIn","set","end","login","_req$body2","compare","match","admin","error"],"mappings":"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","file":"userController.js","sourcesContent":["'use strict';\r\n\r\nvar _bcrypt = require('bcrypt');\r\n\r\nvar _bcrypt2 = _interopRequireDefault(_bcrypt);\r\n\r\nvar _jsonwebtoken = require('jsonwebtoken');\r\n\r\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\r\n\r\nvar _userModel = require('../models/userModel');\r\n\r\nvar _userModel2 = _interopRequireDefault(_userModel);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nexports.signUp = function (req, res) {\r\n  var _req$body = req.body,\r\n      name = _req$body.name,\r\n      email = _req$body.email,\r\n      password = _req$body.password;\r\n\r\n\r\n  var sql = {\r\n    text: 'SELECT * FROM users WHERE email= $1',\r\n    values: [email]\r\n  };\r\n  _userModel2.default.query(sql, function (err, result) {\r\n    if (err) {\r\n      return res.status(500).json({\r\n        err: err\r\n      });\r\n    }\r\n    if (result.rows.length > 0) {\r\n      return res.status(409).json({\r\n        message: 'Email already exists'\r\n      });\r\n    }\r\n    _bcrypt2.default.hash(password, 10, function (err, hash) {\r\n      if (err) {\r\n        return res.status(500).json({\r\n          err: err\r\n        });\r\n      }\r\n      // const password = hash;\r\n      var query = {\r\n        text: 'INSERT INTO users(email, name, password, admin) VALUES($1, $2, $3, $4 ) RETURNING id',\r\n        values: [email, name, hash, false]\r\n      };\r\n      _userModel2.default.query(query, function (err, result) {\r\n        if (err) {\r\n          return res.status(500).json({\r\n            err: err\r\n          });\r\n        }\r\n        if (result.rowCount === 1) {\r\n          // Create token\r\n          var token = _jsonwebtoken2.default.sign({\r\n            id: result.rows[0].id,\r\n            email: email,\r\n            name: name\r\n          }, process.env.JWT_KEY, {\r\n            expiresIn: '1hr'\r\n          });\r\n          res.set('Access-Control-Allow-Origin', '*');\r\n          res.status(201).json({\r\n            token: token\r\n          }).end();\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexports.login = function (req, res) {\r\n  var _req$body2 = req.body,\r\n      email = _req$body2.email,\r\n      password = _req$body2.password;\r\n\r\n\r\n  var sql = {\r\n    text: 'SELECT * FROM users WHERE email= $1',\r\n    values: [email]\r\n  };\r\n\r\n  _userModel2.default.query(sql, function (err, result) {\r\n    if (err) {\r\n      return res.status(500).json({\r\n        err: err\r\n      }).end();\r\n    }\r\n    // res.json(result.rows.length);\r\n    if (result && result.rows.length === 1) {\r\n      _bcrypt2.default.compare(password, result.rows[0].password, function (err, match) {\r\n        if (match) {\r\n          // Create token\r\n          var token = _jsonwebtoken2.default.sign({\r\n            id: result.rows[0].id,\r\n            email: result.rows[0].email,\r\n            name: result.rows[0].name,\r\n            admin: result.rows[0].admin\r\n          }, process.env.JWT_KEY, {\r\n            expiresIn: '1h'\r\n          });\r\n          res.set('Access-Control-Allow-Origin', '*');\r\n          res.status(200).json({\r\n            token: token\r\n          }).end();\r\n        }\r\n      });\r\n    } else {\r\n      res.status(401).json({\r\n        error: 'Login Authentication Failed',\r\n        email: email,\r\n        password: password\r\n      }).end();\r\n    }\r\n  });\r\n};\r\n//# sourceMappingURL=userController.js.map"]}